version: '2.1'
# Tests & Build: source code --> distribution code

# USAGE (from root directory): docker-compose -f <filePath> up <service>
services:
    
    deploymentEnvironment:
        image: myuserindocker/deployment-environment:latest

    buildDistributionCode: # Build source code & download project dependencies.
        extends: deploymentEnvironment
        container_name: build
        environment:
            DEPLOYMENT: ${DEPLOYMENT:-production}
        volumes:
          - ../../source:/project/application/source/
          - ../../setup/container/shellScript:/project/application/setup/container/shellScript/
          - ../../setup/build:/project/application/setup/build/
          - ../../setup/utility:/project/application/setup/utility/
          - ../../setup/configuration/configuration.js:/project/application/setup/configuration/configuration.json
          - ../../dependency/appDeploymentLifecycle:/project/dependency/appDeploymentLifecycle/
          - ../../distribution:/project/application/distribution/
        working_dir: /project/application/setup/build/
        entrypoint: /project/application/setup/container/shellScript/buildSourceCode.entrypoint.sh
        # command: bash -c "sleep 100000"

    # localUnitTest:
    #     extends: deploymentEnvironment
    #     container_name: unit
    #     volumes:
    #       - ../../distribution:/app/
    #       - ../../setup/container/shellScript:/tmp/shellScript/
    #       - ../../setup/test/:/tmp/test/
    #     working_dir: /tmp/test/
    #     # entrypoint allows cd command to work, in command: bash it doesn't.
    #     # entrypoint: /tmp/shellScript/localUnitTest.sh
    #     command: bash -c "npm install; npm run test;"

    # localStagingTest:
    #     extends: deploymentEnvironment
    #     container_name: staging
    #     volumes:
    #       - ../../setup/container/shellScript:/tmp/shellScript/
    #       - ../../setup/test/:/tmp/test/
    #     environment:
    #         - HOST_IP=localhost:80
    #     network_mode: host
    #     working_dir: /tmp/test/
    #     # entrypoint: /tmp/shellScript/localStagingTest.sh
    #     # command: bash -c "printenv"
    #     command: bash -c "npm install; npm run localStagingTest;"

    # Used only to build image.
    buildImage:
        build:
            context: ../../../
            dockerfile: ./dependency/appDeploymentLifecycle/deploymentContainer/service.dockerfile
            args:
                - DEPLOYMENT=${DEPLOYMENT:-production}
        image: myuserindocker/${imageName}:latest # tag for created/built image # name of local image to be built
